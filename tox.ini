[tox]
envlist =
    py36, mypy,
    doc8, readme,
    flake8, pylint,
    flake8-tests, pylint-tests

# Additional environments:
# bandit :: Looks for security issues. Complains about subprocess.
# vulture :: Looks for unused code. Prone to false-positives.
# linters :: Runs all linters over all source code.
# linters-tests :: Runs all linters over all tests.

# Build/Deploy environments:
# docs :: Build Sphinx docs
# serve-docs :: Start webserver to host built Sphinx docs
# park :: Build pypi-parker distributables
# build :: Build source and wheel distributables
# test-release :: Publish to testpypi
# release :: Publish to pypi

[testenv]
sitepackages = False
deps =
    mock
    pytest
    pytest-catchlog
    pytest-cov
    pytest-mock
    coverage
commands =
    coverage run -m pytest \
        --cov pypi_parker \
        {posargs}

# mypy
[testenv:mypy]
basepython = python3
deps =
    coverage
    mypy
commands =
    python -m mypy \
        --linecoverage-report build \
        src/pypi_parker/
    # Make mypy linecoverage report readable by coverage
    python -c \
        "t = open('.coverage', 'w');\
        c = open('build/coverage.json').read();\
        t.write('!coverage.py: This is a private format, don\'t read it directly!\n');\
        t.write(c);\
        t.close()"
    coverage report -m

# Linters
[testenv:flake8]
basepython = python3
deps =
    flake8
    flake8-docstrings
    flake8-import-order
commands =
    flake8 src/pypi_parker/ setup.py

[testenv:flake8-tests]
basepython = {[testenv:flake8]basepython}
deps = 
    flake8
    flake8-import-order
commands =
    flake8 \
        # Ignore F811 redefinition errors in tests (breaks with pytest-mock use)
        --ignore F811 \
        --exclude test/functional/vectors \
        test/

[testenv:pylint]
basepython = python3
deps =
    {[testenv]deps}
    pyflakes
    pylint
commands =
    pylint \
        --rcfile=src/pylintrc \
        src/pypi_parker/  \
        setup.py

[testenv:pylint-tests]
basepython = {[testenv:pylint]basepython}
deps = {[testenv:pylint]deps}
commands =
    pylint \
        --rcfile=test/pylintrc \
        test/functional/

[testenv:doc8]
basepython = python3
deps =
    -rdocs/requirements.txt
    doc8
commands = doc8 docs/index.rst README.rst CHANGELOG.rst

[testenv:readme]
basepython = python3
deps = readme_renderer
commands = python setup.py check -r -s

[testenv:bandit]
basepython = python3
deps = bandit
commands = bandit -r src/pypi_parker/

# Prone to false positives: only run independently
[testenv:vulture]
basepython = python3
deps = vulture
commands = vulture src/pypi_parker/

[testenv:linters]
basepython = python3
deps =
    {[testenv:flake8]deps}
    {[testenv:pylint]deps}
    {[testenv:doc8]deps}
    {[testenv:readme]deps}
    {[testenv:bandit]deps}
commands =
    {[testenv:flake8]commands}
    {[testenv:pylint]commands}
    {[testenv:doc8]commands}
    {[testenv:readme]commands}
    {[testenv:bandit]commands}

[testenv:linters-tests]
basepython = python3
deps =
    {[testenv:flake8-tests]deps}
    {[testenv:pylint-tests]deps}
commands =
    {[testenv:flake8-tests]commands}
    {[testenv:pylint-tests]commands}

# Documentation
[testenv:docs]
basepython = python3
deps = -rdoc/requirements.txt
commands =
    sphinx-build -E -c docs/ -b html docs/ docs/build/html

[testenv:serve-docs]
basepython = python3
skip_install = true
changedir = docs/build/html
deps =
commands =
    python -m http.server {posargs}

# Release tooling
[testenv:park]
basepython = python3.6
deps = setuptools
commands = python setup.py park

[testenv:build]
basepython = python3
skip_install = true
deps =
    wheel
    setuptools
commands =
    python setup.py sdist bdist_wheel

[testenv:test-release]
basepython = python3
skip_install = true
deps =
    {[testenv:build]deps}
    twine
commands =
    {[testenv:build]commands}
    twine upload --skip-existing --repository testpypi dist/*

[testenv:release]
basepython = python3
skip_install = true
deps =
    {[testenv:build]deps}
    twine
commands =
    {[testenv:build]commands}
    twine upload --skip-existing --repository pypi dist/*
